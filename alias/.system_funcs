# To make this work, uncomment the line below and replace myprojectdir with your desired search directory
# export SEARCH_DIR=myprojectdir
fx () {
  file=$(find ~/$SEARCH_DIR -type f -wholename \*$1\* -not -path './.*/*' | peco)
  echo "Enter a command..."; read command
  eval $command $file
}

fyr() {
  file=$(find ~/$SEARCH_DIR -type f -wholename \*$1\* -not -path '*/.*/*' -not -path "*/mason*/*" | fzy)
  cd $(dirname "${file}")
}

zv() {
 file=$(find ~/$SEARCH_DIR -type f -wholename \*$1\* -not -path '*/.*/*' -not -path "*/mason*/*" | fzy)
 vim "${file}"
}

dism () {
  func=$(arm-none-eabi-objdump -t $1 | cut -f2 | cut -d ' ' -f2 | fzy)
  arm-none-eabi-gdb $1 -batch -ex "disas /m $func" | less
}

dwget () {
  rm -rf $(basename "$1") && wget $1
}

gsa () {
  stashnum="${1:-0}"
  cmd="git stash apply stash@{$stashnum}"
  printf "$cmd\n\n"; eval $cmd
}

gsp () {
  stashnum="${1:-0}"
  cmd="git stash show -p stash@{$stashnum}"
  printf "$cmd\n\n"; eval $cmd
}

gla () {
  cmd="git log --author=$@"
  printf "$cmd\n\n"; eval $cmd
}

git-retag () {
  cmd="git tag -d $1 && git push origin $1 --delete && git tag $1 && git push origin $1"
  echo -n "Exec '$cmd' [y/n]? "
  read reply
  echo
  if [ $reply != "${reply#[Yy]}" ]; then
    eval $cmd
  fi
}